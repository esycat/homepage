import com.eriwen.gradle.js.tasks.*
import com.eriwen.gradle.css.tasks.*

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'com.eriwen', name: 'gradle-js-plugin',  version: ext.get('plugin.js.version')
        classpath group: 'com.eriwen', name: 'gradle-css-plugin', version: ext.get('plugin.css.version')
    }
}

apply plugin: 'js'
apply plugin: 'css'

// Declare JavaScript sources
javascript.source {
    dev {
        js {
            srcDir artifactDir + '/' + jsSrcDir
            include '**/*.js'
            exclude '**/*.min.js'
            exclude project.name + '.js'
        }
    }
}

// Declare StyleSheet sources
css.source {
    dev {
        css {
            srcDir artifactDir + '/' + cssSrcDir
            include '*.css'
            exclude '*.min.css'
            exclude project.name + '.css'
        }
    }
}

/**
 * @return List Command line arguments for SCSS
 */
def getScssArgs() {
    def args = []

    args.add('--force')
    args.add('--no-cache')

    if (env != 'dev') {
        args.add('--style')
        args.add('compressed')
    }

    args.add(scssSrcDir + "/" + project.name + ".scss")
    args.add(cssDestDir + "/" + project.name + ".css")

    args
}

def getTargetFile(String dir, String type, String suffix = null) {
    def name = project.name + (suffix ? '.' + suffix : '') + '.' + type
    def path = [artifactDir, dir, name]
    file(path.join('/'))
}

task ('clean-js') << {
    getTargetFile(jsDestDir, 'js').delete()
    getTargetFile(jsDestDir, 'js', 'min').delete()
}

task ('combine-js', type: CombineJsTask) {
    source = javascript.source[env].js.files
    dest = getTargetFile(jsDestDir, 'js')
}

task ('minify-js', type: MinifyJsTask) {
    source = tasks['combine-js']
    dest = getTargetFile(jsDestDir, 'js', 'min')
}

task ('compress-js', type: GzipJsTask) {
    source = tasks['minify-js']
    dest = getTargetFile(jsDestDir, 'js', 'min')
}

task ('clean-css') << {
    getTargetFile(cssDestDir, 'css').delete()
    getTargetFile(cssDestDir, 'css', 'min').delete()
}

task ('combine-css', type: CombineCssTask) {
    source = css.source[env].css.files
    dest = getTargetFile(cssDestDir, 'css')
}

task ('minify-css', type: MinifyCssTask) {
    source = tasks['combine-css']
    dest = getTargetFile(cssDestDir, 'css', 'min')
}

task ('compress-css', type: GzipCssTask) {
    source = tasks['minify-css']
    dest = getTargetFile(cssDestDir, 'css', 'min')
}

task ('compile-css', type: Exec) {
    workingDir artifactDir
    executable 'scss'
    args getScssArgs()
}
